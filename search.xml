<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[scratch初级-1-月球漫步]]></title>
    <url>%2F2018%2F07%2F06%2Fscratch-edu-1%2F</url>
    <content type="text"><![CDATA[课程目标对scratch进行初步认识，了解基础概念：舞台，角色，脚本，造型，背景，声音。 课程对象才接触scratch，从未应用上述概念完成过一个工程的新手。 学习模式建议先看一遍，然后自己做一遍，完成的童鞋可分享到scratch官网，在评论处发出你的工程地址。 视频教程地址：https://www.bilibili.com/video/av26086604/ 推荐高清播放，点击下方视频分辨率调整按钮直接跳转。]]></content>
      <categories>
        <category>scratch</category>
      </categories>
      <tags>
        <tag>scratch 教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scratch教程-序]]></title>
    <url>%2F2018%2F07%2F05%2Fscratch-edu-0%2F</url>
    <content type="text"><![CDATA[scratch是什么Scratch是一款由麻省理工学院（MIT） 设计开发的少儿编程工具。 多语言（包含简体中文），开源，完全免费。 简单来说：通过鼠标拖拽即可完成程序逻辑的构建，使用者无需像学习各个编程语言那样了解语法，可以直接通过 图形化界面完成工程的编写，在官方提供的基本资源库（图片，声音）下即可完成各式各样的游戏等程序开发。你 可以用它做一个游戏，画一幅画，做一个电子相册，做一个动画，讲一个故事，做一个生动的问答测试等等。 以最简单有趣的方式提供一个能够自由发挥的编程平台，这是我对scratch的评价。 注：除非特指，本教程scratch版本默认为最新版本scratch2。 scratch 如何运行浏览器在线：官方网站：https://scratch.mit.edu/ 脱机离线软件： 下载链接：https://scratch.mit.edu/download 俩者界面一致，但在线模式由于服务器在国外的原因，加载和读取资源稍慢，好处是云端储存不用安装。 在线和离线方式都可以分享工程至官方网站，与全球scratch爱好者分享和交流你的成果。 本教程主要面向1. 家长，学会后教给孩子，亲子教育两不误 2. 感兴趣的儿童/少年，能够跟着教程自学 3. 儿童编程相关从业者，多多交流，共同进步 4. 对图形化编程或者编程感兴趣的童鞋 为什么学习scratch除了网络中搜到的相关原因之外，从编程语言学习本身出发，学习scratch与其他编程语言如： java,c++,python一样，学习语言本身就是学会如何与“计算机”沟通，如何把现实问题转换成机器语言，但scratch 却着非常低的学习门槛。 首先，scratch开发环境无需特别搭建，图形化的编程模式使得开发者无需理解繁琐的关键词，特殊语法，以及系 统函数，可以做到“打开既开始”。 其次，scratch把编程所需的函数，概念以及各种行为模式分类封装成积木，并根据卡槽类型规范了积木组合 模式。原生整合了丰富的图片和声音资源，并且提供了完整度很高的中文支持。 最后，全球的工程资源都共享在统一平台，供开发者学习和展示，逐渐形成了一个完善的生态链。 开发一个应用会经历些什么 思考目的，考虑可行性，构造结果 将抽象的思维转换成具体的目的 考虑利用现有资源是否能完成 在大脑中构造一个基本结果并模拟运作 把思维转换成scratch语言 学会用“别人”的逻辑思考问题 把完整的结果分为几个步骤或模块进行考虑 在大脑中或通过其他方式完成设计 实践：尝试，碰壁，寻求帮助。 一边动脑一边动手 遇到困难，学会借助帮助或搜索引擎解决问题 验证：程序是否符合期望 不仅完成，还需要检查结果 越仔细，测试的路径越完整，呈现后出现的问题越少 思考并调整：再已经完成的基础上寻求更好的解决方案 永远都有更好的方案 大多好的工程都是渐进完成的 呈现：提交他人可以体验的结果。 共享结果，分享经验 获得属于自己的成就感 可以看出这个过程同现实中完成一个任务非常类似，区别是这个过程成本极低，却能让孩子 得到宝贵的经验。如此对思维反复的训练，积累的结果还可以应用在生活或者其他学习过程中。 教程内容导向​ 本教程不仅旨在教会scratch的使用，更在课程中引入了儿童（甚至青少年）数学，物理，科学等各个方面的 知识，以游戏等其他类型工程开发为例，让学习者在学会scratch编程之外更生动的巩固或学到各类知识。 时代背景​ 这个时代离不开编程，生活的每一个环节都和软件,程序离不开关系，人工智能是否会取代大部分工 作尚未得知，但未来一定离不开编程，而且编程将不再是一个专业的职业方向，会变成更加“平民化”，成为类似与 骑车，算术一样的基本技能，人们在遇到复杂问题的时候不再通过“原始”的办法进行解决，转而选择使用智能和自 动化的方式，届时编程能力或者运用程序的能力就等同于解决问题的能力。 准备好了？ 那我们开始吧]]></content>
      <categories>
        <category>scratch</category>
      </categories>
      <tags>
        <tag>scratch 教程</tag>
      </tags>
  </entry>
</search>
